version: 1.0.{build}

branches:
  only:
    - master

os: Windows Server 2012

init:
  - git config --global core.autocrlf input

clone_folder: c:\projects\myproject

environment:

matrix:
  allow_failures:
    - platform: x86
      configuration: Debug

    - platform: x64
      configuration: Release

services:
  - mssql2012sp1 # start SQL Server 2012 SP1 Express
  - mssql2012sp1rs # start SQL Server 2012 SP1 Express and Reporting Services
  - mssql2008r2sp2 # start SQL Server 2008 R2 SP2 Express
  - mssql2008r2sp2rs # start SQL Server 2008 R2 SP2 Express and Reporting Services
  - iis # start IIS
  - msmq # start Queuing services

install:
  - echo This is batch
  - ps: Write-Host 'This is PowerShell'

  - cmd: echo This is batch again
  - cmd: set MY_VAR=12345


assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: "2.2.{build}"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"


# build platform, i.e. x86, x64, AnyCPU.
platform: x86


# build Configuration, i.e. Debug, Release, etc.
configuration: Debug

build:
  project: MyTestAzureCS.sln # path to Visual Studio solution or project
  publish_wap: true # package Web Application Projects (WAP) for Web Deploy
  publish_wap_xcopy: true # package Web Application Projects (WAP) for XCopy deployment
  publish_azure: true # package Azure Cloud Service projects and push to artifacts
  publish_nuget: true # package projects with .nuspec files and push to artifacts

  # MSBuild verbosity level
  verbosity: quiet|minimal|normal|detailed

# scripts to run before build
before_build:

# scripts to run after build
after_build:

# to run your custom scripts instead of automatic MSBuild
build_script:

# to disable automatic builds
#build: off

test:
  assemblies:
    - asm1.dll
    - asm2.dll

  categories:
    - UI
    - E2E

before_test:
  - echo script1
  - ps: Write-Host "script1"

after_test:

test_script:
  - echo This is my custom test script


# to disable automatic tests 
#test: off

artifacts:
  - path: test.zip
  - path: MyProject\bin\$(configuration)
    name: myapp
  - path: logs
  - path: out\*.nupkg

deploy:
  - provider: FTP
    username: admin
    password: psw

  - provider: WebDeploy
    url: http://www.deploy.com/myendpoint
    on:
      branch: release

      platform: x86

      configuration: debug


  - provider: Environment

    name: staging

    on:

      branch: staging

      environment:

      var1: value1

      var2: value2


# scripts to run before deployment

before_deploy:


# scripts to run after deployment

after_deploy:


# to run your custom scripts instead of provider deployments

deploy_script:


# to disable deployment

#deploy: off


on_success:

  - do something


# on build failure

on_failure:

  - do something


# webhooks

notifications:

  webhooks:

    - url: http://www.myhook.com

      events: build_success

    - url: http://www.myhook2.com

      events: [build_success, deployment_success]
